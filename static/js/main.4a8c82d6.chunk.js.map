{"version":3,"sources":["util.ts","Fret.tsx","music/note.ts","NoteIndicator.tsx","music/chord.ts","music/tuning.ts","settings-context.ts","Fretboard.tsx","Quiz.tsx","GuitarStrings.tsx","voicing.ts","Listbox.tsx","Explorer.tsx","Settings.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["getRandomInt","max","Math","floor","random","tmap","arr","callback","l","length","map","item","i","first","last","INTERVALS","src_Fret","_ref","num","react_default","a","createElement","Fragment","className","style","gridArea","concat","typeClass","quiz","indicator","chordRoot","NoteIndicator","label","note","type","showOctave","tone","octave","LETTER_TO_NUM","C","C#","Db","D","D#","Eb","E","F","F#","Gb","G","G#","Ab","A","A#","Bb","B","NUM_TO_LETTER","Note","Object","classCallCheck","this","createClass","key","value","parseSpn","spn","parseInt","interval","start","result","addSemitones","semitones","Chord","rootNote","intervals","notes","shortName","longName","root","toConsumableArray","_intervals","toArray","third","fifth","seventh","slice","Intervals","PerfectFifth","MajorThird","MinorSeventh","MajorSeventh","MinorThird","Tritone","MajorSixth","MinorSixth","get","Tuning","name","join","string","fret","TUNINGS","SettingsContext","createContext","tuning","fretCount","update","headSize","positionToGridArea","src_Fretboard","_ref3","children","_useMemo","useMemo","frets","remainingSize","size","push","computeFretSizes","gridColumns","_useMemo2","slicedToArray","fretSizes","columns","useContext","rows","_note","_ref2","gridRows","gridTemplateColumns","gridTemplateRows","assign","_size","computeRandomQuestion","includedStrings","strings","reduce","acc","val","src_Quiz","content","_useContext","_useState","useState","_useState2","answer","setAnswer","_useState3","_useState4","judgement","setJudgement","_useState5","_useState6","question","setQuestion","handleSubmit","e","b","solution","positionToNote","toString","hasOwnProperty","correct","id","Date","now","preventDefault","onSubmit","event","onChange","target","src_GuitarStrings","activeStrings","onToggle","width","round","react","onClick","height","borderBottom","Voicings","arguments","undefined","tuningCache","Map","chord","voicingsCache","set","voicings","createVoicings","Voicing","bassNote","_this","minFret","maxFret","distance","strValue","unmuted","filter","n","min","apply","required","optional","buildVoicing","openNotes","current","unplaced","placed","_openNotes","openNote","remaining","possibilities","_loop","newMin","_","i2","forEach","bassNoteIndex","findIndex","voicing","addCurrent","sort","React","memo","options","onSelect","ulEl","useRef","moveUpDownEnabled","moveButton","keysSoFar","_useState7","_useState8","activeDescendant","focusFirstItem","querySelector","ref","cn","role","onFocus","onKeyDown","evt","nextItem","document","getElementById","altKey","previousElementSibling","nextElementSibling","itemList","querySelectorAll","focusLastItem","getAttribute","findItemToFocus","o","selected","ChordRoot","ChordRoots","ChordParts","chordTypes","Major triad","Minor triad","Augmented triad","Diminished triad","Major 6th","Minor 6th","7th","Major 7th","Minor 7th","Augmented 7th","Diminished 7th","Half-diminished 7th","Minor-major 7th","chordTypeKeys","keys","src_Explorer","match","history","params","chordType","crParam","decodeURIComponent","find","cr","voicingIndex","setVoicingIndex","chordNotes","setChordNotes","isSeventh","status","bassOptions","_useDepState","factory","inputs","state","setState","newState","useDepState","currentBass","includes","_useDepState2","chordVoicings","v","showVoicing","index","played","src_Listbox","encodeURIComponent","currentTarget","objectSpread","checked","indexOf","src_Settings","htmlFor","App","setTuning","setShowOctave","len","newBoolArray","setActiveStrings","toggleGuitarString","toToggle","neck","HashRouter","Provider","NavLink","to","Route","exact","path","render","Redirect","props","Boolean","window","location","hostname","ReactDOM","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a8c82d6.chunk.js","sourcesContent":["import { useState, useMemo, Dispatch, SetStateAction } from 'react';\n\nexport function newBoolArray(len: number, val = true): boolean[] {\n  const result = [];\n\n  for (let i = 0; i  < len; i++) {\n    result.push(val);\n  }\n\n  return result;\n}\n\nexport function getRandomInt(max: number) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nexport function tmap<T>(\n  arr: T[],\n  callback: (item: T, index: number, props: { first: boolean, last: boolean, length: number}) => void\n) {\n  const l = arr.length;\n\n  return arr.map((item, i) =>\n    callback(item, i, {\n      first: i === 0,\n      last: i === (l - 1),\n      length: l\n    })\n  );\n}\n\nexport function isStringArray(value: any): value is string[] {\n  if (value instanceof Array && (value.length === 0 || typeof value[0] === 'string')) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function useDepState<S>(\n  factory: (prevState?: S) => S,\n  inputs: ReadonlyArray<any>,\n): [S, Dispatch<SetStateAction<S>>] {\n  let [state, setState] = useState<S>(factory());\n\n  state = useMemo(() => {\n    let newState = factory(state);\n\n    if (newState !== state) {\n      // We must only call if the new value is different, to avoid an infinite loop.\n      setState(state = newState);\n    }\n\n    return state;\n  }, [...inputs, state]);\n\n  return [state, setState];\n}\n","import React, { ReactNode } from 'react';\nimport './Fret.scss';\n\nfunction dots(i: number): ReactNode {\n  return (i === 2 || i === 4 || i === 6 || i === 8 || i === 14) ? \n    <span className=\"dot single\"></span>\n  : (i === 11) ? \n    <>\n      <span className=\"dot double1\"></span><span className=\"dot double2\"></span>\n    </>\n  :\n    null;\n}\n\nexport default ({num}: {num: number}) =>\n  <>\n    <span\n      className=\"Fret-number\"\n      style={{\n        gridArea: `top / f${num}`\n      }}\n    >\n      { num + 1 }\n    </span>\n    <div\n      className=\"Fret\"\n      style={{\n        gridArea: `top-edge / f${num} / bottom-edge / f${num + 1}`\n      }}\n    >\n      { dots(num) }\n    </div>\n  </>;\n","export const LETTER_TO_NUM: {[tone: string]: number} = {\n  'C': 0,\n  'C#': 1,\n  'Db': 1,\n  'D': 2,\n  'D#': 3,\n  'Eb': 3,\n  'E': 4,\n  'F': 5,\n  'F#': 6,\n  'Gb': 6,\n  'G': 7,\n  'G#': 8,\n  'Ab': 8,\n  'A': 9,\n  'A#': 10,\n  'Bb': 10,\n  'B': 11\n};\n\nexport const NUM_TO_LETTER = [\n  'C',\n  'C#',\n  'D',\n  'D#',\n  'E',\n  'F',\n  'F#',\n  'G',\n  'G#',\n  'A',\n  'A#',\n  'B'\n];\n\n\nexport enum INTERVALS {\n  Unison = 0,\n  MinorSecond = 1,\n  MajorSecond = 2,\n  MinorThird = 3,\n  MajorThird = 4,\n  PerfectFourth = 5,\n  Tritone = 6,\n  PerfectFifth = 7,\n  MinorSixth = 8,\n  MajorSixth = 9,\n  MinorSeventh = 10,\n  MajorSeventh = 11,\n  Octave = 12\n}\n\nexport class Note {\n  constructor(public tone: string, public octave: number) {}\n\n  toString(): string {\n    return this.tone;\n  }\n\n  toSpn(): string {\n    return this.tone + this.octave;\n  }\n\n  toneEquals(note: Note): boolean {\n    return LETTER_TO_NUM[this.tone] === LETTER_TO_NUM[note.tone];\n  }\n}\n\nexport function toneEquals(a: string, b: string): boolean {\n  return LETTER_TO_NUM.hasOwnProperty(a) &&\n    LETTER_TO_NUM.hasOwnProperty(b) &&\n    LETTER_TO_NUM[a] === LETTER_TO_NUM[b];\n}\n\nexport function parseSpn(spn: string | Note): Note {\n  if (typeof spn !== 'string') {\n    // This lets us safely call parseSpn on things that might already be note objects.\n    return spn;\n  }\n\n  if (spn.length === 3) {\n    return new Note(spn[0] + spn[1], parseInt(spn[2]));\n  }\n\n  return new Note(spn[0], parseInt(spn[1]));\n}\n\nexport function interval(note: Note, tone: string): number {\n  let start = LETTER_TO_NUM[parseSpn(note).tone]; // 9\n  let end = LETTER_TO_NUM[tone]; // 0\n\n  let result = end - start;\n\n  if (result < 0) {\n    result += 12;\n  }\n\n  return result;\n}\n\nexport function addSemitones(note: Note, semitones: number) {\n  const num = LETTER_TO_NUM[note.tone];\n\n  let octave = note.octave;\n  let tone = num + (semitones % 12);\n\n  if (tone < 0) {\n    tone += 12;\n    octave--;\n  }\n  else if (tone >= 12) {\n    tone -= 12;\n    octave++;\n  }\n\n  octave += (semitones / 12) | 0;\n\n  return new Note(\n    NUM_TO_LETTER[tone],\n    octave\n  );\n}","import React from 'react';\nimport './Note.css';\nimport { Note } from './music';\n\nconst typeClass = {\n  quiz: 'Note-quiz',\n  indicator: 'Note-indicator',\n  chordRoot: 'Note-chord-root'\n};\n\ninterface NoteIndicatorParams {\n  note: Note,\n  type: keyof typeof typeClass,\n  showOctave: boolean;\n  gridArea: string;\n}\n\nexport default function({ note, type, showOctave, gridArea }: NoteIndicatorParams) {\n  let label;\n  type = type || 'indicator';\n\n  if (type === 'quiz') {\n    label = '?'\n  }\n  else {\n    label = <span>{ note.tone }{ showOctave ? <sub>{ note.octave }</sub>: null }</span>\n  }\n\n  return <div\n    className={'Note ' + typeClass[type]}\n    style={{gridArea: gridArea}}\n  >\n    { label }\n  </div>\n}\n","import { Note, parseSpn, addSemitones, INTERVALS as Intervals } from \"./note\";\n\ninterface ChordQuality {\n  name: string;\n  short: string;\n  long: string;\n}\n\nexport class Chord {\n  public readonly notes: Note[];\n  public readonly shortName: string;\n  public readonly longName: string;\n\n  constructor(rootNote: Note | string, intervals: number[]) {\n    let root = rootNote = parseSpn(rootNote);\n    this.notes = [\n      root,\n      ...intervals.map(i => addSemitones(root, i))\n    ];\n\n    const [third, fifth, seventh, ninth, ...added] = intervals;\n\n    let shortName = root.tone;\n    let longName = root.tone;\n\n    // Naming logic as per:\n    // https://en.wikipedia.org/wiki/Chord_names_and_symbols_(popular_music)\n\n    switch(fifth) {\n      case Intervals.PerfectFifth:\n        switch(third) {\n          case Intervals.MajorThird:\n            switch(seventh) {\n              case Intervals.MinorSeventh:\n                shortName += 'm7';\n                longName += 'min7';\n                break;\n              case Intervals.MajorSeventh:\n            }\n            break;\n          case Intervals.MinorThird:\n            shortName += 'm';\n            longName += 'min';\n\n            switch(seventh) {\n              case Intervals.MinorSeventh:\n                shortName += '7';\n                longName += '7';\n                break;\n              case Intervals.MajorSeventh:\n              shortName += '/m7';\n              longName += '/maj7';\n              break;\n            }\n            break;\n        }\n        break;\n      case Intervals.Tritone:\n        if (seventh) {\n          switch(third) {\n            case Intervals.MajorThird:\n              switch(seventh) {\n                case Intervals.MinorSeventh:\n                  shortName += '7♭5';\n                  longName += '7dim5';\n                  break;\n              }\n              break;\n            case Intervals.MinorThird:\n              switch(seventh) {\n                case Intervals.MinorSeventh:\n                  shortName += 'ø7';\n                  longName += 'ø7';\n                  break;\n                case Intervals.MajorSixth:\n                  shortName += '°7';\n                  longName += 'dim7';\n                  break;\n              }\n              break;\n          }\n        }\n        else {\n          shortName += '°';\n          longName += 'dim';\n        }\n        break;\n      case Intervals.MinorSixth:\n        shortName += '+';\n        longName += 'aug';\n\n        switch(seventh) {\n          case Intervals.MinorSeventh:\n            shortName += '7';\n            longName += '7';\n            break;\n          case Intervals.MajorSeventh:\n            shortName += '/m7';\n            longName += '/maj7';\n          break;\n        }\n        break;\n    }\n\n    this.shortName = shortName;\n    this.longName = longName;\n  }\n\n  get rootNote(): Note {\n    return this.notes[0];\n  }\n}\n\nexport function majorTriad(rootNote: Note | string): Chord {\n  return new Chord(rootNote, [Intervals.MajorThird, Intervals.PerfectFifth]);\n}\n\nexport function minorTriad(rootNote: Note | string): Chord {\n  return new Chord(rootNote, [Intervals.MinorThird, Intervals.PerfectFifth]);\n}\n\nexport function diminishedTriad(rootNote: Note | string): Chord {\n  return new Chord(\n    rootNote,\n    [Intervals.MinorThird, Intervals.Tritone]\n  )\n}\n\nexport function majorSixth(rootNote: Note | string): Chord {\n  return new Chord(\n    rootNote,\n    [Intervals.MajorThird, Intervals.PerfectFifth, Intervals.MajorSixth]\n  );\n}\n\nexport function dominantSeventh(rootNote: Note | string): Chord {\n  return new Chord(\n    rootNote,\n    [Intervals.MajorThird, Intervals.PerfectFifth, Intervals.MinorSeventh]\n  );\n}\n\nexport function majorSeventh(rootNote: Note | string): Chord {\n  return new Chord(\n    rootNote,\n    [Intervals.MajorThird, Intervals.PerfectFifth, Intervals.MajorSeventh]\n  );\n}\n\nexport function augmentedTriad(rootNote: Note | string): Chord {\n  return new Chord(\n    rootNote,\n    [Intervals.MajorThird, Intervals.MinorSixth]\n  );\n}\n\nexport function augmentedSeventh(rootNote: Note | string): Chord {\n  return new Chord(\n    rootNote,\n    [Intervals.MajorThird, Intervals.MinorSixth, Intervals.MinorSeventh]\n  );\n}\n\nexport function minorSixth(rootNote: Note | string): Chord {\n  return new Chord(\n    rootNote,\n    [Intervals.MinorThird, Intervals.PerfectFifth, Intervals.MajorSixth]\n  );\n}\n\nexport function minorSeventh(rootNote: Note | string): Chord {\n  return new Chord(\n    rootNote,\n    [Intervals.MinorThird, Intervals.PerfectFifth, Intervals.MinorSeventh]\n  );\n}\n\nexport function seventh(rootNote: Note | string): Chord {\n  return new Chord(\n    rootNote,\n    [Intervals.MajorThird, Intervals.PerfectFifth, Intervals.MinorSeventh]\n  )\n}\n\nexport function minorMajorSeventh(rootNote: Note | string): Chord {\n  return new Chord(\n    rootNote,\n    [Intervals.MinorThird, Intervals.PerfectFifth, Intervals.MajorSeventh]\n  );\n}\n\nexport function diminishedSeventh(rootNote: Note | string): Chord {\n  return new Chord(\n    rootNote,\n    [Intervals.MinorThird, Intervals.Tritone, Intervals.MajorSixth]\n  );\n}\n\nexport function halfDiminishedSeventh(rootNote: Note | string): Chord {\n  return new Chord(\n    rootNote,\n    [Intervals.MinorThird, Intervals.Tritone, Intervals.MinorSeventh]\n  );\n}\n","import { Note, parseSpn, addSemitones } from \"./note\";\n\n\nexport class Tuning {\n  notes: Note[];\n\n  constructor(public name: string, notes: string[]) {\n    this.notes = notes.map(parseSpn);\n  }\n\n  toString(): string {\n    return this.notes.join('-');\n  }\n\n  positionToNote(string: number, fret: number) {\n    const rootNote = this.notes[string];\n    return addSemitones(rootNote, fret)\n  }\n}\n\nexport const TUNINGS = [\n  new Tuning('Standard', [\n    'E2', 'A2', 'D3', 'G3', 'B3', 'E4'\n  ]),\n  new Tuning('Open A', [\n    'E2', 'A2', 'C#3', 'E3', 'A3', 'E4'\n  ]),\n  new Tuning('Open B', [\n    'B2', 'F#2', 'B3', 'F#3', 'B3', 'D#4'\n  ]),\n  new Tuning('Open C', [\n    'C2', 'G2', 'C3', 'G3', 'C4', 'E4'\n  ]),\n  new Tuning('Open D', [\n    'D2', 'A2', 'D3', 'F#3', 'A3', 'D4'\n  ]),\n  new Tuning('Open E', [\n    'E2', 'B2', 'E3', 'G#3', 'B3', 'E4'\n  ]),\n  new Tuning('Open F', [\n    'F2', 'A2', 'C3', 'F3', 'C4', 'F4'\n  ]),\n  new Tuning('Open F#', [\n    'F#2', 'A#2', 'C#3', 'F#3', 'C#4', 'F#4'\n  ]),\n  new Tuning('Open G', [\n    'D2', 'G2', 'D3', 'G3', 'B3', 'D4'\n  ])\n];","import { createContext } from 'react';\nimport { Tuning, TUNINGS } from './music';\n\nexport interface Settings {\n  showOctave: boolean;\n  tuning: Tuning;\n  fretCount: number;\n  update: (settings: { showOctave?: boolean, tuning?: Tuning}) => void\n}\n\nexport const SettingsContext = createContext<Settings>({\n  showOctave: false,\n  tuning: TUNINGS[0],\n  fretCount: 14,\n  update: () => {}\n});\n","import React, { useMemo, ReactNode, useContext } from 'react';\nimport { tmap } from './util';\nimport './Fretboard.scss';\nimport Fret from './Fret';\nimport NoteIndicator from './NoteIndicator';\nimport { SettingsContext } from './settings-context';\nimport { Tuning, Note } from './music';\nconst headSize = 100;\n\nexport const positionToGridArea = \n  (string: number, fret: number) => `s${ string + 1 } / span 1 / s${string + 1} / f${ fret }`;\n\nexport const computeFretSizes = (fretCount: number): number[] => {\n  const frets = [];\n  let remainingSize = 10;\n\n  for (let i = 0; i < fretCount; i++) {\n    const size = remainingSize / 17.817;\n    remainingSize = remainingSize - size;\n    frets.push(size);\n  }\n\n  return frets;\n}\n\nexport function gridColumns(frets: number[]): string {\n  return '[start] auto [head] ' + headSize  + 'px ' + \n    tmap(frets, (size, i, { first, last }) =>\n      (first ? '[nut f0] ' : '') +\n      size + 'fr' +\n      ' [f' + (i + 1) + (last ? ' fretboard-end]' : ']')\n    ).join(' ') + ' auto [end]'\n}\n\nexport function gridRows(tuning: Tuning): string {\n  const l = tuning.notes.length;\n  return '[top] auto ' +\n    tmap(tuning.notes, (_note, i, { first }) =>\n      (first ? '[top-edge ' : '[') + 's' + (l - i) + '] 40px'\n    ).join(' ') + ' [bottom-edge s0]'\n}\n\nexport interface Indicator {\n  type: 'quiz' | 'indicator' | 'chordRoot';\n  note: Note;\n  gridArea: string;\n}\n\ninterface Props {\n  children?: ReactNode;\n  fretCount: number;\n  tuning: Tuning;\n  notes: Indicator[];\n}\n\nexport default function({children, fretCount, tuning, notes}: Props) {\n  const [\n    fretSizes,\n    columns,\n  ] = useMemo<[number[], string]>(() => {\n    const frets = computeFretSizes(fretCount);\n\n    return [\n      frets,\n      gridColumns(frets)\n    ]\n  }, [fretCount]);\n\n  const { showOctave } = useContext(SettingsContext);\n\n  const rows = useMemo(() => gridRows(tuning), [tuning]);\n\n  return <div\n    className=\"Fretboard\"\n    style={{\n      gridTemplateColumns: columns,\n      gridTemplateRows: rows\n    }}\n  >\n    <div\n      className=\"Fretboard-head\"\n      style={{\n        gridArea: `top-edge / head / bottom-edge / nut`\n      }}\n    >\n    </div>\n    <div\n      className=\"Fretboard-fingerboard\"\n      style={{\n        gridArea: `top-edge / nut / bottom-edge / fretboard-end`\n      }}\n    ></div>\n\n    { children }\n\n    {\n      notes.map((note, i) =>\n        <NoteIndicator\n          key={'note_' + i}\n          showOctave={showOctave}\n          {...note}\n        ></NoteIndicator>\n      )\n    }\n\n    {\n      fretSizes.map((_size, i) =>\n        <Fret\n          key={'fret' + i}\n          num={i}\n        ></Fret>\n      )\n    }\n  </div>\n}\n","import React, { ReactNode, useState, SyntheticEvent, useContext } from 'react';\nimport { Indicator, positionToGridArea } from './Fretboard';\nimport { getRandomInt } from './util';\nimport { SettingsContext } from './settings-context';\nimport { toneEquals } from './music';\nimport './Quiz.scss';\n\ninterface Judgement {\n  correct: boolean;\n  id: number;\n}\n\ninterface Question {\n  type: string;\n  string: number;\n  fret: number;\n}\n\nconst computeRandomQuestion = (includedStrings: boolean[], fretCount: number): Question => {\n  const strings = includedStrings.reduce<number[]>((acc, val, i) => {\n    if (val) {\n      acc.push(i);\n    }\n\n    return acc;\n  }, []);\n\n  return {\n    type: 'note',\n    string: strings[getRandomInt(strings.length)],\n    fret: getRandomInt(fretCount)\n  };\n};\n\ninterface Params {\n  content: (notes: Indicator[]) => ReactNode;\n  includedStrings: boolean[];\n}\n\nexport default ({ content, includedStrings }: Params) => {\n  const { fretCount, tuning } = useContext(SettingsContext);\n\n  const [answer, setAnswer] = useState('');\n  const [judgement, setJudgement] = useState<Judgement | null>(null);\n  const [question, setQuestion] = useState(() => \n    computeRandomQuestion(includedStrings, fretCount)\n  );\n\n  const handleSubmit = (e: SyntheticEvent<HTMLFormElement>) => {\n    // Done late in case the tuning has changed.\n    const solution = tuning.positionToNote(question.string, question.fret);\n\n    if (toneEquals(answer, solution.toString())) {\n      setQuestion(computeRandomQuestion(includedStrings, fretCount));\n      \n      setJudgement({\n        correct: true,\n        id: Date.now()\n      });\n    }\n    else {\n      setJudgement({\n        correct: false,\n        id: Date.now()\n      });\n    }\n\n    setAnswer('');\n\n    e.preventDefault();\n  };\n\n  if (!includedStrings[question.string]) {\n    setQuestion(computeRandomQuestion(includedStrings, fretCount));\n  }\n\n  const notes: Indicator[] = [{\n    note: tuning.positionToNote(question.string, question.fret),\n    type: 'quiz',\n    gridArea: positionToGridArea(question.string, question.fret)\n  }];\n\n  return (\n    <>\n      { content(notes) }\n      <div className=\"Quiz\">\n        <form \n          className=\"Quiz-question\"\n          onSubmit={event => handleSubmit(event)}\n        >\n          <h1>What is the higlighted note?</h1>\n          <input\n            className=\"Quiz-answer-field\"\n            type=\"text\"\n            value={answer}\n            onChange={event => setAnswer(event.target.value)}\n          />\n          {\n            judgement ?\n              <div\n                className={'Quiz-judgement ' + (judgement.correct ? 'correct' : 'incorrect') }\n                key={judgement.id}\n              >\n                { judgement.correct ? 'Correct' : 'Incorrect' }\n              </div> : null\n          }\n        </form>\n      </div>\n    </>\n  )\n}\n","import React, { Fragment, useContext } from 'react';\nimport { SettingsContext } from './settings-context';\nimport './GuitarStrings.scss';\n\nconst MAX_STRING_WIDTH = 3;\n\nexport default (\n  { activeStrings, onToggle}: { activeStrings: boolean[], onToggle: (num: number) => void}\n) => {\n  const { tuning } = useContext(SettingsContext);\n\n  return <>{\n    tuning.notes.map((rootNote, num, { length } ) => {\n      const width = Math.max(1, Math.round(((length - (num + 1)) / length) * MAX_STRING_WIDTH));\n      return (\n        <Fragment key={num}>\n          <div\n            onClick={() => onToggle(num)}\n            className={'GuitarStrings-root-note ' + (activeStrings[num] ? 'included' : 'excluded')}\n            style={{\n              gridArea: `s${ num + 1 } / fretboard-end`\n            }}\n          >{ rootNote.tone }</div>\n          <div\n            className=\"GuitarStrings-string\"\n            style = {{\n              height: '50%',\n              gridArea: `s${ num } / head / s${ num + 1 } / fretboard-end`,\n              borderBottom: `${ width }px solid yellow`\n            }}\n          ></div>\n        </Fragment>\n      );\n    })\n  }</>\n}\n","import { interval, addSemitones, Tuning, Chord, Note } from './music';\n\nexport class Voicings {\n  tuningCache = new Map<Tuning, Map<Chord, Voicing[]>>();\n\n  constructor(public fretCount = 12) {}\n\n  getVoicings(tuning: Tuning, chord: Chord): Voicing[] {\n    let voicingsCache = this.tuningCache.get(tuning);\n  \n    if (!voicingsCache) {\n      this.tuningCache.set(tuning, voicingsCache = new Map());\n    }\n  \n    let voicings = voicingsCache.get(chord);\n\n    if (!voicings) {\n      voicingsCache.set(chord, voicings = createVoicings(tuning, chord.notes, [], this.fretCount));\n    }\n  \n    return voicings;\n  }\n}\n\ninterface ChordVoicings {\n  root: Voicing[];\n  inversions: Voicing[];\n}\n\ntype VoicingNotes = (number | null)[];\n\nexport class Voicing {\n  minFret: number;\n  maxFret: number;\n  distance: number;\n  private strValue: string;\n\n  constructor(public notes: VoicingNotes, public bassNote: Note) {\n    const unmuted = notes.filter(n => n !== null) as number[];\n    this.minFret = Math.min(...unmuted);\n    this.maxFret = Math.max(...unmuted);\n    this.distance = notes.reduce<number>((a, b) => a + (b === null ? this.maxFret + 1 : b), 0);\n    this.notes = notes;\n    this.strValue = this.notes.map(n => n === null ? 'x' : n).join(' ');\n  }\n\n  toString() {\n    return this.strValue;\n  }\n}\n\nexport function createVoicings(tuning: Tuning, required: Note[], optional: Note[] = [], fretCount: number): Voicing[] {\n  const result: Voicing[] = [];\n\n  function addCurrent(current: VoicingNotes) {\n    const bassNoteIndex = current.findIndex(n => n !== null) as number;\n    const bassNote = addSemitones(tuning.notes[bassNoteIndex], current[bassNoteIndex] as number);\n    const voicing = new Voicing(current, bassNote);\n\n    result.push(voicing);\n  }\n\n  function buildVoicing(openNotes: Note[], current: (number | null)[], unplaced: Note[], placed: Note[]) {\n    if (openNotes.length === 0) {\n      if (unplaced.length === 0) {\n        addCurrent(current);\n      }\n\n      return;\n    }\n\n    const [openNote, ...remaining] = openNotes;\n    const unmuted = current.filter(n => n !== null) as number[];\n    const min = Math.min(...unmuted);\n    const max = Math.max(...unmuted);\n\n    let possibilities = 0;\n\n    for (let n = 0; n < unplaced.length; n++) {\n      const start = interval(openNote, unplaced[n].toString());\n  \n      for(let i = start; i < fretCount + 1; i += 12) {\n        const newMin = Math.min(i, min);\n        const newMax = Math.max(i, max);\n\n        if (newMax - newMin > 4) {\n          continue;\n        }\n\n        buildVoicing(\n          remaining,\n          [...current, i],\n          unplaced.filter((_, i2) => i2 !== n),\n          [...placed, unplaced[n]]\n        );\n\n        possibilities++;\n      }\n    }\n\n    if (tuning.notes.length - current.length > unplaced.length) {\n      // It's still possible to include repeated and optional notes / mutes\n      // while placing all unplaced required notes.\n\n      [...placed, ...optional].forEach(n => {\n        const start = interval(openNote, n.toString());\n    \n        for(let i = start; i < fretCount + 1; i += 12) {\n          const newMin = Math.min(i, min);\n          const newMax = Math.max(i, max);\n  \n          if (newMax - newMin > 4) {\n            continue;\n          }\n\n          buildVoicing(\n            remaining,\n            [...current, i],\n            unplaced,\n            placed\n          );\n\n          possibilities++;\n        }\n      });\n\n      // We only consider muting if we can't find any valid note to play,\n      // or we haven't yet placed any note. This prevents adding lots of\n      // silly variations where we're just unncessarily muting each string\n      // in a given voicing.\n      if (possibilities === 0 || placed.length === 0) {\n        buildVoicing(\n          remaining,\n          [...current, null],\n          unplaced,\n          placed\n        );\n      }\n    }\n  }\n\n  buildVoicing(\n    tuning.notes,\n    [],\n    required,\n    []\n  );\n\n  result.sort((a, b) => a.distance - b.distance);\n\n  return result;\n}","import React, { ReactNode, useState, useRef, KeyboardEvent, useMemo } from 'react';\nimport './Listbox.scss';\nimport cn from 'classnames';\nimport { isStringArray } from './util';\n\nexport interface Option {\n  label: string;\n  value: any;\n}\n\ninterface Props {\n  options: any[];\n  className?: string;\n  value: any;\n  onSelect: (value: any) => void;\n}\n\nexport default React.memo(({ options, className, value, onSelect }: Props) => {\n  const ulEl = useRef<HTMLUListElement>(null);\n  const [moveUpDownEnabled, setMoveUpDownEnabled] = useState(false);\n  const [moveButton, setMoveButton] = useState(null);\n  const [keysSoFar, setKeysSoFar] = useState('');\n  const [activeDescendant, setActiveDescendnt] = useState<string | null>(null);\n  \n  function focusItem(item: Element) {\n\n  }\n\n  function focusFirstItem() {\n    if (ulEl.current) {\n      const firstItem = ulEl.current.querySelector('[role=\"option\"]');\n\n      if (firstItem) {\n        focusItem(firstItem);\n      }\n    }\n  }\n\n  function focusLastItem() {\n    if (ulEl.current) {\n      const itemList = ulEl.current.querySelectorAll('[role=\"option\"]');\n\n      if (itemList.length) {\n        focusItem(itemList[itemList.length - 1]);\n      }\n    }\n  }\n\n  function setupFocus() {\n    if (activeDescendant) {\n      return;\n    }\n\n    focusFirstItem();\n  }\n\n  function moveUpItems() {\n\n  }\n\n  function moveDownItems() {\n\n  }\n\n  function toggleSelectItem(item: Element) {\n\n  }\n\n  function findItemToFocus(key: string): Element | null {\n    if (!ulEl.current) {\n      return null;\n    }\n\n    const itemList = ulEl.current.querySelectorAll('[role=\"option\"]');\n    let searchIndex = 0;\n\n    if (keysSoFar) {\n      for (let i = 0; i < keysSoFar.length; i++) {\n        if (itemList[i].getAttribute('id') == activeDescendant) {\n          searchIndex = 0;\n        }\n      }\n    }\n\n    const soFar = keysSoFar + key;\n\n    return null;\n  }\n\n  function checkKeyPress(evt: KeyboardEvent) {\n    const key = evt.key;\n  \n    if (!activeDescendant) {\n      return;\n    }\n\n    let nextItem: Element | null = document.getElementById(activeDescendant);\n\n    if (!nextItem) {\n      return;\n    }\n\n    switch(key) {\n      case 'PageUp':\n      case 'PageDown':\n        if (moveUpDownEnabled) {\n          evt.preventDefault();\n\n          if (key === 'PageUp') {\n            moveUpItems();\n          }\n          else {\n            moveDownItems();\n          }\n        }\n\n        break;\n      case 'ArrowUp':\n      case 'ArrowDown':\n        evt.preventDefault();\n\n        if (moveUpDownEnabled && evt.altKey) {\n          if (key === 'ArrowUp') {\n            moveUpItems();\n          }\n          else {\n            moveDownItems();\n          }\n          \n          return;\n        }\n\n        if (key === 'ArrowUp') {\n          nextItem = nextItem.previousElementSibling;\n        }\n        else {\n          nextItem = nextItem.nextElementSibling;\n        }\n\n        if (nextItem) {\n          focusItem(nextItem);\n        }\n\n        break;\n\n      case 'Home':\n        evt.preventDefault();\n        focusFirstItem();\n        break;\n      case 'End':\n        evt.preventDefault();\n        focusLastItem();\n        break;\n      case 'Space':\n        evt.preventDefault();\n        toggleSelectItem(nextItem);\n        break;\n      case 'Backspace':\n      case 'Delete':\n      case 'Return':\n       if (!moveButton) {\n         return;\n       }\n\n       break;\n      default:\n       const itemToFocus = findItemToFocus(key);\n       if (itemToFocus) {\n         focusItem(itemToFocus);\n       }\n       break;\n    }\n  }\n\n  function checkClickItem() {}\n\n  return (\n    <ul\n      ref={ulEl}\n      className={cn('Listbox', className)}\n      role=\"listbox\"\n      onFocus={setupFocus}\n      onKeyDown={checkKeyPress}\n    >\n      { options.map((o, i) => (\n        <li\n          key={i}\n          className={cn('Listbox-item', { selected: value === o }) }\n          role=\"option\"\n          onClick={() => onSelect(o)}\n        >{ o.toString() }</li>\n      )) }\n    </ul>\n  );\n});\n","import React, { useContext, ReactNode, useState, useMemo, SyntheticEvent } from 'react';\nimport { Indicator, positionToGridArea } from './Fretboard';\nimport { SettingsContext } from './settings-context';\nimport { Voicings, createVoicings } from './voicing';\nimport Listbox from './Listbox';\nimport './Explorer.scss';\nimport { RouteChildrenProps } from 'react-router';\nimport { useDepState } from './util';\nimport {\n  majorTriad,\n  minorTriad,\n  addSemitones,\n  diminishedTriad,\n  majorSeventh,\n  augmentedTriad,\n  majorSixth,\n  minorSixth,\n  minorSeventh,\n  seventh,\n  augmentedSeventh,\n  diminishedSeventh,\n  halfDiminishedSeventh,\n  minorMajorSeventh,\n  Note,\n  Chord\n} from './music';\n\ninterface Params { \n  chordRoot: string;\n  chordType: string;\n}\n\ninterface Props extends RouteChildrenProps<Params> {\n  content: (notes: Indicator[]) => ReactNode;\n}\n\nclass ChordRoot {\n  private label: string;\n\n  constructor(public value: any, label?: string) {\n    this.label = label || this.value.toString();\n  }\n\n  toString() {\n    return this.label;\n  }\n}\n\nconst ChordRoots = [\n  new ChordRoot('A'),\n  new ChordRoot('A#', 'A# / Db'),\n  new ChordRoot('B'),\n  new ChordRoot('C'),\n  new ChordRoot('C#', 'C# / Db'),\n  new ChordRoot('D'),\n  new ChordRoot('D#', 'D# / Eb'),\n  new ChordRoot('E'),\n  new ChordRoot('F'),\n  new ChordRoot('F#', 'F# / Gb'),\n  new ChordRoot('G'),\n  new ChordRoot('G#', 'G# / Ab')\n];\n\nconst ChordParts = ['Root', '3rd', '5th', '7th'];\n\ntype ChordNoteStatus = 'Optional' | 'Required' | 'Omitted' | 'Bass';\n\ninterface ChordNote {\n  note: Note;\n  label: string;\n  status: ChordNoteStatus;\n}\n\nconst chordTypes: { [key: string]: (note: Note | string) => Chord } = {\n  'Major triad': majorTriad,\n  'Minor triad': minorTriad,\n  'Augmented triad': augmentedTriad,\n  'Diminished triad': diminishedTriad,\n  'Major 6th': majorSixth,\n  'Minor 6th': minorSixth,\n  '7th': seventh,\n  'Major 7th': majorSeventh,\n  'Minor 7th': minorSeventh,\n  'Augmented 7th': augmentedSeventh,\n  'Diminished 7th': diminishedSeventh,\n  'Half-diminished 7th': halfDiminishedSeventh,\n  'Minor-major 7th': minorMajorSeventh\n}\n\nconst chordTypeKeys = Object.keys(chordTypes);\n\nexport default ({ content, match, history }: Props) => {\n  const { tuning, fretCount } = useContext(SettingsContext);\n\n  let { chordRoot: crParam, chordType } = match ? match.params : { chordRoot: 'A', chordType: 'Major triad' };\n\n  crParam = decodeURIComponent(crParam);\n\n  const chordRoot = ChordRoots.find(cr => cr.value == crParam) || ChordRoots[0];\n\n  const voicings = useMemo(() => new Voicings(fretCount), [fretCount]);\n  let [voicingIndex, setVoicingIndex] = useState(0);\n \n  const chord = useMemo(() => {\n    return chordTypes[chordType](chordRoot.value + '3');\n  }, [chordRoot, chordType]);\n\n  let [chordNotes, setChordNotes] = useState<ChordNote[]>([]);\n\n  useMemo(() => {\n    const isSeventh = chord.notes.length > 3;\n\n    setChordNotes(chordNotes = chord.notes.map<ChordNote>((note, i) => ({\n      note,\n      label: note.toString() +' (' + ChordParts[i] + ')',\n      status: i === 0 ? 'Bass' : (i === 2 && isSeventh) ? 'Optional' : 'Required'\n    })));\n  }, [chord]);\n\n  const bassOptions = useMemo(() => {\n    return [...chord.notes.map(note => note.toString()), 'Any'];\n  }, [chord]);\n\n  const [bassNote, setBassNote] = useDepState(currentBass => {\n    if (bassOptions.includes(currentBass)) {\n      return currentBass;\n    }\n    else {\n      return bassOptions[0];\n    }\n  }, [bassOptions]);\n\n  const chordVoicings = useMemo(() => {\n    setVoicingIndex(voicingIndex = 0);\n    // let result = voicings.getVoicings(tuning, chord);\n    let result = createVoicings(\n      tuning,\n      chordNotes.filter(n => n.status === 'Bass' || n.status === 'Required').map(n => n.note),\n      chordNotes.filter(n => n.status === 'Optional').map(n => n.note),\n      fretCount\n    );\n\n    const bassNote = chordNotes.find(n => n.status === 'Bass');\n\n    if (bassNote) {\n      result = result.filter(v => v.bassNote.tone === bassNote.note.tone);\n    }\n\n    return result;\n  }, [tuning, chordNotes]);\n\n  const voicing = chordVoicings[voicingIndex];\n\n  const showVoicing = (index: number) => {\n    if (index < 0) {\n      index = 0;\n    }\n    else if (index >= chordVoicings.length) {\n      index = chordVoicings.length - 1;\n    }\n\n    setVoicingIndex(index);\n  }\n\n  const notes = useMemo(() => {\n    const played: Indicator[] = [];\n\n    voicing.notes.forEach((fret, string) => {\n      if (fret !== null) {\n        let note = addSemitones(tuning.notes[string], fret);\n\n        played.push({\n          type: note.tone === chord.rootNote.tone ? 'chordRoot' : 'indicator',\n          note,\n          gridArea: positionToGridArea(string, fret)\n        });\n      }\n    });\n\n    return played;\n  }, [voicing]);\n\n  function updateChordNote(index: number, status: ChordNoteStatus) {\n    setChordNotes(chordNotes.map((n, i) => {\n      if (index === i) {\n        return {\n          ...n,\n          status\n        };\n      }\n      else if (status === 'Bass' && n.status === 'Bass') {\n        return {\n          ...n,\n          status: 'Required' as ChordNoteStatus\n        }\n      }\n\n      return n;\n    }));\n  }\n\n  return (\n    <>\n      { content(notes) }\n\n      <div className=\"Explorer\">\n        <label className=\"Explorer-root Explorer-label\">Root</label>\n        <Listbox\n          className=\"Explorer-chord Explorer-list\"\n          options={ChordRoots}\n          value={chordRoot}\n          onSelect={selected => history.push(`/explore/${ encodeURIComponent(selected.value) }/${ chordType }`)}\n        />\n\n        <label className=\"Explorer-chord-type Explorer-label\">Chord</label>\n        <Listbox\n          className=\"Explorer-chord-type Explorer-list\"\n          options={chordTypeKeys}\n          value={chordType}\n          onSelect={selected => history.push(`/explore/${ encodeURIComponent(chordRoot.value) }/${ selected }`)}\n        />\n\n        <label className=\"Explorer-chord-notes Explorer-label\">\n          Notes\n        </label>\n        <div className=\"Explorer-chord-notes Explorer-list\">\n          { chordNotes.map((n, i) => {\n            const update = (e: SyntheticEvent<HTMLInputElement>) => \n              updateChordNote(i, e.currentTarget.value as ChordNoteStatus);\n\n            return (\n              <React.Fragment key={i}>\n                <span className=\"Explorer-chord-note-label\">{ n.label }:</span>\n                <label>\n                  <input\n                    type=\"radio\"\n                    value=\"Bass\"\n                    checked={n.status === 'Bass'}\n                    onChange={update}\n                  /> Bass\n                </label>\n\n                <label>\n                  <input\n                    type=\"radio\"\n                    value=\"Required\"\n                    checked={n.status === 'Required'}\n                    onChange={update}\n                  /> Required\n                </label>\n\n                <label>\n                  <input\n                    type=\"radio\"\n                    value=\"Optional\"\n                    checked={n.status === 'Optional'}\n                    onChange={update}\n                  /> Optional\n                </label>\n\n                <label>\n                  <input\n                    type=\"radio\"\n                    value=\"Omitted\"\n                    checked={n.status === 'Omitted'}\n                    onChange={update}\n                  /> Omitted\n                </label>\n              </React.Fragment>\n            )\n          })}\n        </div>\n\n        <label className=\"Explorer-voicings Explorer-label\">{ chordVoicings.length} Voicings</label>\n        <Listbox\n          className=\"Explorer-voicings Explorer-list\"\n          options={chordVoicings}\n          value={voicing}\n          onSelect={value => setVoicingIndex(chordVoicings.indexOf(value))}\n        />\n\n        <div className=\"Explorer-voicings-nav\">\n          <button onClick={() => setVoicingIndex(0)}>|&lt;</button>\n          <button onClick={() => showVoicing(voicingIndex - 1)}>&lt;</button>\n          <button onClick={() => showVoicing(voicingIndex + 1)}>&gt;</button>\n          <button onClick={() => showVoicing(chordVoicings.length - 1)}>&gt;|</button>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useContext, SyntheticEvent } from 'react';\nimport { SettingsContext } from './settings-context';\nimport { TUNINGS } from './music';\nimport './Settings.scss';\n\nexport default () => {\n  const { tuning, showOctave, update} = useContext(SettingsContext);\n\n  const handleTuningChanged = (e: SyntheticEvent<HTMLSelectElement>) => {\n    update({ tuning: TUNINGS.find(tuning => tuning.name === e.currentTarget.value) || tuning });\n  }\n  \n  return (\n    <div className=\"Settings\">\n      <label htmlFor=\"tuning\">Tuning</label>\n\n      <select\n        className=\"Settings-tuning\"\n        value={tuning.name}\n        onChange={handleTuningChanged}\n        id=\"tuning\"\n      >\n        { TUNINGS.map((tuning, i) => <option key={i}>{tuning.name}</option>)}\n      </select>\n\n      <label className=\"Settings-show-octave\">\n        <input\n          type=\"checkbox\"\n          checked={showOctave}\n          onChange={() => update({ showOctave: !showOctave }) }\n        /> Show octave\n      </label>\n    </div>\n  )\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { newBoolArray } from './util';\nimport Fretboard, { Indicator } from './Fretboard';\nimport { SettingsContext } from './settings-context';\nimport Quiz from './Quiz';\nimport GuitarStrings from './GuitarStrings';\nimport Explorer from './Explorer';\nimport Settings from './Settings';\nimport { HashRouter as Router, Route, NavLink, Redirect } from 'react-router-dom';\nimport { TUNINGS, Tuning } from './music';\n\nconst fretCount = 15;\n\nconst App = () => {\n  const [tuning, setTuning] = useState(TUNINGS[0]);\n  const [showOctave, setShowOctave] = useState(true);\n  const [activeStrings, setActiveStrings] = useState(newBoolArray(tuning.notes.length));\n\n  const toggleGuitarString = (toToggle: number) => {\n    let value = [...activeStrings];\n    value[toToggle] = !value[toToggle];\n    setActiveStrings(value);\n  };\n\n  const updateSettings = (options: { showOctave?: boolean; tuning?: Tuning}) => {\n    if (typeof options.showOctave !== 'undefined') setShowOctave(options.showOctave);\n    if (options.tuning) setTuning(options.tuning);\n  }\n\n  const neck = (notes: Indicator[]) =>\n    <Fretboard\n      fretCount={fretCount}\n      tuning={tuning}\n      notes={notes}\n    >\n      <GuitarStrings\n        activeStrings={activeStrings}\n        onToggle={toggleGuitarString}\n      ></GuitarStrings>\n    </Fretboard>;\n  \n  return (\n    <Router>\n      <div className=\"App\">\n        <SettingsContext.Provider value={{ showOctave, tuning, fretCount, update: updateSettings }}>\n          <header className=\"App-header\">\n            <h1 className=\"App-title\">Fretfull</h1>\n            <nav className=\"App-nav\">\n              <NavLink className=\"App-explore-link\" to=\"/explore\">Explore</NavLink>\n              <NavLink className=\"App-quiz-link\" to=\"/quiz\">Quiz</NavLink>\n            </nav>\n            <Settings></Settings>\n          </header>\n\n          <Route exact path=\"/\" render={() => <Redirect to=\"/explore/A/Major triad\" />}></Route>\n          <Route exact path=\"/explore\" render={() => <Redirect to=\"/explore/A/Major triad\" />}></Route>\n\n          <Route\n            exact\n            path=\"/explore/:chordRoot/:chordType\"\n            render={props => <Explorer content={neck} {...props}></Explorer>}\n          />\n\n          <Route\n            path=\"/quiz\"\n            render={() => \n              <Quiz\n                includedStrings={activeStrings}\n                content={neck}\n              ></Quiz>\n            }\n          />\n        </SettingsContext.Provider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}